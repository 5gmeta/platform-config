apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: 5gmeta-cloud
  region: eu-west-3
  version: "1.21"

vpc:
  nat:
    gateway: Disable # other options: HighlyAvailable, Single

iam:
  withOIDC: true

managedNodeGroups:
  - name: managed-ng-1
    instanceType: t3a.large
    desiredCapacity: 2
    minSize: 2
    maxSize: 4
    volumeSize: 50
    ssh:
      allow: true # will use ~/.ssh/id_rsa.pub as the default ssh key if no publicKeyNamem specified
      publicKeyName: 5gmeta-cluster-key # key created in aws
    iam:
      withAddonPolicies:
        autoScaler: true
        ebs: true
        albIngress: true
    ami: ami-0b5e3b2c6352f72bb # get ami id 'aws ssm get-parameter --name /aws/service/eks/optimized-ami/1.21/amazon-linux-2/recommended/image_id --region eu-west-3 --query "Parameter.Value" --output text'
    overrideBootstrapCommand: |
      #!/bin/bash
      /etc/eks/bootstrap.sh 5gmeta-cloud --kubelet-extra-args "--kube-reserved memory=0.3Gi,ephemeral-storage=1Gi --system-reserved memory=0.3Gi,ephemeral-storage=1Gi --eviction-hard memory.available<200Mi,nodefs.available<10%"
#nodeGroups:
#  - name: unmanaged-ng-1
#    instanceType: t3a.large
#    desiredCapacity: 2
#    minSize: 1
#    maxSize: 4
#    volumeSize: 50
#    ssh:
#      allow: true # will use ~/.ssh/id_rsa.pub as the default ssh key if no publicKeyNamem specified
#      publicKeyName: 5gmeta-cluster-key # key created in aws
#    kubeletExtraConfig:
#        kubeReserved:
#            cpu: "300m"
#            memory: "300Mi"
#            ephemeral-storage: "1Gi"
#        kubeReservedCgroup: "/kube-reserved"
#        systemReserved:
#            cpu: "300m"
#            memory: "300Mi"
#            ephemeral-storage: "1Gi"
#        evictionHard:
#            memory.available:  "200Mi"
#            nodefs.available: "10%"
#        featureGates:
#            RotateKubeletServerCertificate: true # has to be enabled, otherwise it will be disabled
